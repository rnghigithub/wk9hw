
## Week 9 Homework Part 2: Questions

1. 
 - permits applications to store data within an individual user's browser.

2. 
- Before HTML5 application data was stored in cookies, included in each server request.

3. 
- it provides for the addition, modification, deletion of stored data items. 

4. 
- localStorage And sessionStorage

5. 
- localStorage and sessionStorage can only be read client-side

6. 
 - cookies can be read server side. 
 -They are popular because they allow sites to store user data directly into the user's browser.
 - mostly used to identify a user's session.
 -It may contain sensitive data.

7.
- Cookies may contain sensitive data.

8. 
- the httpOnly flag is good for blocking access of a cookie from client side and JavaScript coded. It mitigates the negative 
impact of an XSS (Cross Site Scripting) 

9. What are localStorage and sessionStorage of the Web Storage API connected to?
 And what does that connection make possible for pages from the same origin to do?

10. 
- permits you to set, retrieve and remove data for a specific domain and storage type. 

11. The Storage Object, represented by the localStorage and sessionStorage objects, contains one property.
 What is that property called and what does it return? Use your project application to describe 
 what this property does.

12. 
 - Storage.clear() : when invoked, will empty all keys out of storage
    ex.   }
    function clearStorage() {
        const myStory = document.getElementById('textArea');
        myStory.value = '';
        sessionStorage.removeItem('autosave' , myStory.value); }
 
 - Storage.removeItem() : when passed a key name will remove that key from the storage. If not iten is associated with the given 
 key than this method will do nothing
    ex.   sessionStorage.removeItem('autosave' , myStory.value); 
}

 - Storage.setItem() : when passed a key name and value will add that key to the storage/update that key's value if it already exists.       
    ex. sessionStorage.setItem('autosave' , myStory

 - Storage.getItem() : when passed a key name will return that key's value or null is the key is non-existent
   ex. (sessionStorage.getItem('autosave' , myStory)

- Storage.key() : when passed a certain number represented by n, this method returns the name of the nth key in the storage.
    ex.      

13.
- The secure flag attribute allows you to forbid a cookie to be transmitted over HTTP. It will only be transmitted through HTTPS. 

14. 
- sessionStorage
   - Maintains storage in the applications tab in Chrome Developer tools, in Inspector tab then storage tab of the Firefox Developer Tools,
     storage tab of the JavaScript console in Safari
   - Data is available for the duration of the page session when it opens,including when a page reloads/refreshes
   - Stores data only for the session until closed.
   - Storage limit is larger than a cookie, max 5MB.

- localStorage       
 - Data is stored with no expiration date by default. Can only be cleared using JavaScript, clear browser cache or localStorage itself
   in the browser console.
 - Storage limit is max 10MB vs session and cookies   

15. What are the similarities between localStorage and sessionStorage?
- Data is never transferred to the server
- Storage limits are larger than cookies

16. 
- try...catch statement marks a block of statements to try out code and specifics a response if an 
exception is thrown.

17. 
- If there is a sessionStorage support, the program steps into the else statement. 
There we set and get our sessionStorage with checking if we have exceeded the sessionStorage quota. 
Because the exception needs to be catched. the try...catch statement must be used.

18. 
- JSON.stringify() method converts a JavaScript object or value to a JSON string. 
const csv = JSON.stringify(sessionStorage['autosave']);

19. the csv variable is new Blob(blobParts, options). 
blobParts: an array of Blob, BufferSource, or String values. Our instance of Blob is a string value of type text/plain.
options: an optional object. We use the type option in our instance of Blob.

20. Please copy and paste the result of the console.log(csv) after you have clicked on the Save Text To File For Download button. Hint: you should try this out only after you have completed building your application.